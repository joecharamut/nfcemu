/***********************************************************************
Copyright (C) 2022 Joseph Charamut

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
************************************************************************/

#include <avr/common.h>
#include "usart.h"
#include "emulator.h"

uint8_t tagStorage[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0x10, 0x80, 0x00, //Byte  0 to 15:
                        0x03, 0xFF, 0x00, 0xB4, 0xC2, 0x09, 0x00, 0x00, 0x00, 0xA5, 0x74, 0x65, 0x78, 0x74, 0x2F, 0x68, //Byte 16 to 31:
                        0x74, 0x6D, 0x6C, 0xEF, 0xBB, 0xBF, 0x3C, 0x68, 0x74, 0x6D, 0x6C, 0x3E, 0x3C, 0x62, 0x6F, 0x64, //...
                        0x79, 0x20, 0x73, 0x74, 0x79, 0x6C, 0x65, 0x3D, 0x22, 0x62, 0x61, 0x63, 0x6B, 0x67, 0x72, 0x6F, 
                        0x75, 0x6E, 0x64, 0x2D, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x3A, 0x62, 0x6C, 0x61, 0x63, 0x6B, 0x3B, 
                        0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x3A, 0x77, 0x68, 0x69, 0x74, 0x65, 0x3B, 0x66, 0x6F, 0x6E, 0x74, 
                        0x3A, 0x41, 0x72, 0x69, 0x61, 0x6C, 0x3B, 0x22, 0x3E, 0x3C, 0x68, 0x31, 0x3E, 0x53, 0x69, 0x6D, 
                        0x70, 0x6C, 0x65, 0x20, 0x4E, 0x46, 0x43, 0x3C, 0x2F, 0x68, 0x31, 0x3E, 0x3C, 0x70, 0x3E, 0x46, 
                        0x72, 0x6F, 0x6D, 0x20, 0x3C, 0x61, 0x20, 0x68, 0x72, 0x65, 0x66, 0x3D, 0x22, 0x68, 0x74, 0x74, 
                        0x70, 0x3A, 0x2F, 0x2F, 0x79, 0x6F, 0x68, 0x72, 0x62, 0x6C, 0x6F, 0x67, 0x2E, 0x62, 0x6C, 0x6F, 
                        0x67, 0x73, 0x70, 0x6F, 0x74, 0x2E, 0x64, 0x65, 0x22, 0x3E, 0x79, 0x6F, 0x68, 0x72, 0x62, 0x6C, 
                        0x6F, 0x67, 0x3C, 0x2F, 0x61, 0x3E, 0x3C, 0x2F, 0x70, 0x3E, 0x3C, 0x2F, 0x62, 0x6F, 0x64, 0x79, 
                        0x3E, 0x3C, 0x2F, 0x68, 0x74, 0x6D, 0x6C, 0x3E, 0xFE};

uint8_t tagUid[] = {0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77};
            
//Byte 14 (value=0x80=1024/8) specifies tag size in bytes divided by 8
//Byte 18, 19 specify NDEF-Message size, Byte 20..35 is NDEF-header, content starts at Byte 36

NfcEmu::Emulator emu;

#define RFID_FREQU 13560000UL
#define CLC_PBIT (uint16_t)(128.0 * F_CPU / RFID_FREQU + 0.5)
#define CLCS CLC_PBIT * 5 / 4
#define CLCM CLC_PBIT * 7 / 4
#define CLCL CLC_PBIT * 9 / 4

int main() {
  Serial.begin(9600);
  emu.setup(tagStorage, sizeof(tagStorage));
  emu.setUid(tagUid, sizeof(tagUid));
  Serial.print("Hello world\n");

  Serial.print("CLC_PBIT="); Serial.print(CLC_PBIT); Serial.print("\n");
  Serial.print("CLCS="); Serial.print(CLCS); Serial.print("\n");
  Serial.print("CLCM="); Serial.print(CLCM); Serial.print("\n");
  Serial.print("CLCL="); Serial.print(CLCL); Serial.print("\n");
  
  while (1) {
    emu.tick();
  }
}
